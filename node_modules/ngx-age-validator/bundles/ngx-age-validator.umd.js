(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('moment'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-age-validator', ['exports', 'moment', '@angular/core'], factory) :
    (global = global || self, factory(global['ngx-age-validator'] = {}, global.moment, global.ng.core));
}(this, (function (exports, moment, core) { 'use strict';

    function NgxAgeValidator(min, max) {
        return function (control) {
            var birthday = control.value;
            // console.log("birthday", birthday);
            if (birthday !== undefined) {
                var years = moment().diff(birthday, 'years');
                // console.log("years", years);
                if (min && min > years) {
                    return { 'tooJung': true };
                }
                if (max && max < years) {
                    return { 'tooOld': true };
                }
                return null;
            }
            return { 'ageValidation': true };
        };
    }

    var NgxAgeValidatorModule = /** @class */ (function () {
        function NgxAgeValidatorModule() {
        }
        return NgxAgeValidatorModule;
    }());
    NgxAgeValidatorModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [],
                    imports: [],
                    exports: []
                },] }
    ];

    /*
     * Public API Surface of ngx-age-validator
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxAgeValidator = NgxAgeValidator;
    exports.NgxAgeValidatorModule = NgxAgeValidatorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-age-validator.umd.js.map
